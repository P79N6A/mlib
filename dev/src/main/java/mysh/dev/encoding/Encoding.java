package mysh.dev.encoding;

import mysh.ui.JTextFieldWithTips;
import mysh.util.UIs;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author Allen
 */
public class Encoding extends javax.swing.JFrame {

    private final UIController controller;
    public static final String TITLE = "EncodingTransformer";

    /**
     * Creates new form Encoding
     */
    public Encoding() {

        initComponents();
        this.controller = new UIController(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        source = new JTextFieldWithTips();
        destination = new JTextFieldWithTips();
        transType = new javax.swing.JComboBox();
        trans = new javax.swing.JButton();
        fileNamePattern = new javax.swing.JTextField();
        isConsiderSubDirs = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        statusBar = new javax.swing.JLabel();
        autoRecognize = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(TITLE);

        ((JTextFieldWithTips)source).setLabel("源: 文件或目录");
        source.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N

        ((JTextFieldWithTips)destination).setLabel("目标: 目录");
        destination.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N

        transType.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        transType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "GBK to UTF8(without BOM)", "UTF8 to GBK" }));

        trans.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        trans.setText("转换");
        trans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transActionPerformed(evt);
            }
        });

        fileNamePattern.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        fileNamePattern.setText(".*?\\.((java)|(js))");

        isConsiderSubDirs.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        isConsiderSubDirs.setSelected(true);
        isConsiderSubDirs.setText("含子目录");

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel1.setText("文件名匹配(小写)：");

        statusBar.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        statusBar.setText("就绪");
        statusBar.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        autoRecognize.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        autoRecognize.setSelected(true);
        autoRecognize.setText("智能识别");
        autoRecognize.setToolTipText("是否允许自动判断目标类型并自动选择转换方式");
        autoRecognize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                autoRecognizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                autoRecognizeMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(transType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(autoRecognize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(trans, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(destination)
                    .addComponent(source)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileNamePattern, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(isConsiderSubDirs))
                    .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(source, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNamePattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isConsiderSubDirs)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(destination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(trans)
                        .addComponent(autoRecognize)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void autoRecognizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_autoRecognizeMouseEntered
        this.controller.setStatusBar(this.autoRecognize.getToolTipText());
    }//GEN-LAST:event_autoRecognizeMouseEntered

    private void autoRecognizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_autoRecognizeMouseExited
        this.controller.resetStatusBar();
    }//GEN-LAST:event_autoRecognizeMouseExited

    private void sourceMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_sourceMouseClicked

        this.source.selectAll();
    }// GEN-LAST:event_sourceMouseClicked

    private void destinationMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_destinationMouseClicked

        this.destination.selectAll();
    }// GEN-LAST:event_destinationMouseClicked

    private void transActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_transActionPerformed

        this.controller.onTrans();
    }// GEN-LAST:event_transActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        UIs.useNimbusLookAndFeel();
        UIs.resetFont(null);

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                final Encoding encoding = new Encoding();
                encoding.transType.requestFocus();
                encoding.setLocationRelativeTo(null);
                encoding.setVisible(true);
            }
        });

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JCheckBox autoRecognize;
    javax.swing.JTextField destination;
    javax.swing.JTextField fileNamePattern;
    javax.swing.JCheckBox isConsiderSubDirs;
    private javax.swing.JLabel jLabel1;
    javax.swing.JTextField source;
    javax.swing.JLabel statusBar;
    javax.swing.JButton trans;
    javax.swing.JComboBox transType;
    // End of variables declaration//GEN-END:variables
}
